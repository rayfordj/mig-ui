#@follow_tag(registry.redhat.io/ubi8/nodejs-16:latest)
FROM registry.redhat.io/ubi8/nodejs-16:1-161 AS builder

# First copy the application source
COPY --chown=1001:0 $REMOTE_SOURCES/mig-ui/app $APP_ROOT/src

# Set up the build environment
USER root
ADD . .

# Install Yarn from tarball
RUN container-entrypoint npm config set offline true
RUN container-entrypoint npm install --no-audit --verbose -g ./yarn-v1.22.19.tar.gz

# Needed dev packages for native builds
RUN dnf install -y openssl-devel python3
RUN dnf module install -y nodejs:16/development
RUN yarn config set nodedir /usr

# Source cachito environment
RUN source $REMOTE_SOURCES_DIR/mig-ui/cachito.env

# COPY cached node_modules and yarn offline mirror
COPY --chown=1001:0 $REMOTE_SOURCES_DIR/mig-ui/deps/yarn-classic $APP_ROOT/src/node_modules
COPY --chown=1001:0 $REMOTE_SOURCES_DIR/mig-ui/deps/yarn-cache $APP_ROOT/src/.yarn-cache

# ✅ Ensure yarn uses the offline cache
RUN yarn config set yarn-offline-mirror $APP_ROOT/src/.yarn-cache
RUN yarn config set yarn-offline-mirror-pruning false

# ✅ Build with offline mode
ENV BRAND_TYPE="RedHat"
ENV CHROMEDRIVER_SKIP_DOWNLOAD=true \
    SKIP_SASS_BINARY_DOWNLOAD_FOR_CI=true \
    CYPRESS_INSTALL_BINARY=0

RUN container-entrypoint yarn install --offline
RUN container-entrypoint bash -c 'BRAND_TYPE=RedHat yarn build --offline'

# Optional: may already be covered by vendoring
# RUN container-entrypoint yarn install --offline --production

RUN rm -rf $REMOTE_SOURCE_DIR
